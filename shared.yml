openapi: 3.0.0
servers:
  - url: http://localhost:4000/
components:
  securitySchemes:
    Bearer:
      description:
        Represents Access token that applications use to make API requests on behalf of a user.
        The access token represents the authorization of a specific application to access specific parts of a userâ€™s data.
        Config service admin API requires you to provide this access token in header.
        To know more on how to authenticate and authorize yourself and get access token, refer this http://tmtsoftware.github.io/csw/services/aas.html
      type: apiKey
      name: Authorization
      in: header
  parameters:
    startDate:
      name: startDate #cds
      in: query
      description: time range start date
      schema:
        type: string
    startTime: #cds, sdas
      name: startTime
      in: query
      description: time range start time
      schema:
        type: string
    endDate: #cds, sdas
      name: endDate
      in: query
      description: time range end date
      schema:
        type: string
    endTime: #cds, sdas
      name: endTime
      in: query
      description: time range end time
      schema:
        type: string
    startDateReq: #eas
      name: startDate
      in: query
      description: time range start date
      required: true
      schema:
        type: string
    startTimeReq: #eas
      name: startTime
      in: query
      description: time range start time
      required: true
      schema:
        type: string
    endDateReq: #eas
      name: endDate
      in: query
      description: time range end date
      schema:
        type: string
      required: true
    endTimeReq: #eas
      name: endTime
      in: query
      description: time range end time
      required: true
      schema:
        type: string
    originalFilename: #cds
      name: originalFilename
      in: query
      description: filename of file when submitting to DMS
      schema:
        type: string
    programId: #sdas
      name: programId
      in: query
      description: String identifier for the program, in format &lt;YYYY>&lt;S>-P&lt;XXX>, where &lt;YYYY> is the semester year, &lt;S> is the semester (either A or B), and &lt;XXX> is the three digit program number
      example: 2039B-P042
      schema:
        type: string
    obsId: #sdas
      name: obsId
      in: query
      description: String identifier for the observation, in format &lt;ProgramID>-O&lt;XXX>, where &lt;ProgramID> is the Program ID (e.g. 2039B-P042) and XXX is the observation number
      example: 2039B-P042-O567
      schema:
        type: string
    observer: #sdas
      name: observer
      in: query
      description: Name of observer or observing team
      schema:
        type: string
    objectName: #sdas
      name: object
      in: query
      description: name of object
      schema:
        type: string
    ra: #sdas
      name: ra
      in: query
      description: Right Ascension of center point of search area in any common format (XX.YYY, AAh BBm CC.DDDs, HH MM SS.XXX)
      schema:
        type: string
    dec: #sdas
      name: dec
      in: query
      description: Declination of center point of search area in any common format (+XX.YYY, +AAd BBm CC.DDDs, +DD MM SS.XXX)
      schema:
        type: string
    radius: #sdas
      name: radius
      in: query
      description: radius of search area in arcsec. `ra` and `dec` parameters are required when using this parameter
      schema:
        type: number
    instrument: #cds, sdas
      name: instrument
      in: query
      description: name of instrument to restrict results
      example: IRIS
      schema:
        type: string
    channel: #cds, sdas
      name: channel
      in: query
      description: channel of instrument to restrict results.  `instrument` parameter is required when using this parameter
      example: imager
      schema:
        type: string
    integrationTime: #cds, sdas
      name: itime
      in: query
      description: Results will only return exposures matching this exact integration time in seconds
      schema:
        type: number
        minimum: 0
    coadds: #cds, sdas
      name: coadds
      in: query
      description: Results will only return exposures matching this exact number of coadds
      schema:
        type: integer
        minimum: 1
    filter: #cds, sdas
      name: filter
      in: query
      description: Results will only return exposures using this filter
      schema:
        type: string
    scale: #cds, sdas
      name: scale
      in: query
      description: Results will only return exposures in this scale
      schema:
        type: string
    spectralResolution: #cds, sdas
      name: res
      in: query
      description: Results will only return exposures in this exact spectral resolution
      schema:
        type: string
    aoMode: #cds, sdas
      name: aoMode
      in: query
      description: Results will only return exposures taken in this AO Mode
      example: MCAO
      schema:
        type: string
    calibrationType: #cds
      name: calType
      in: query
      description: type of calibration file to locate.  `fileType` must be "calibration" to use this parameter
      schema:
        $ref: '#/components/schemas/CalibrationFileType'
    fileType:  #sdas
      name: fileType
      in: query
      description: type of file to search for
      schema:
        $ref: '#/components/schemas/FileType'
    outputFormat: #sdas
      name: format
      in: query
      description: format of results
      schema:
        $ref: '#/components/schemas/OutputFormat'

  schemas:
    ExposureId: #cds, mas, sdss, sdas
      type: string
    ObserveEvent: #mas
      type: string
    HeaderItem: 
      type: object
      properties:
        keyword:
          type: string
        value:
          {}
        comment: 
          type: string
    Header: #mas
      type: array
      items: 
        $ref: '#/components/schemas/HeaderItem'
    DataResponse:
      type: object
      required:
      - dataResponseType
      properties:
        dataResponseType: 
          type: string
      discriminator:
        propertyName: dataResponseType
    Subsystem: # eas, ddcs, fss
      description: name of subsystem
      type: string
      enum: [AOESW, APS, CIS, CLN, CRYO, CSW, DMS, DPS, ENC, ESEN, ESW, HNDL, HQ, IRIS, LGSF, M1COAT, M1CS, M1S, M2COAT, M2S, M3S, MODHIS, NFIRAOS, OSS, REFR, SCMS, SER, SOSS, STR, SUM, TCS, TINS, WFOS]
    ResampleMethod: #eas
      type: string
      enum: [interp, nearest, past, binned]
    EventType:
      description: type of event
      type: string
      enum: [boolean, char, byte, short, long, int, float, double, string, utcTime, taiTime]
    CalibrationFileType:
      description: Type of calibration file
      type: string
      enum: [flat, bias, dark, wavelengthSolution]
    FileType:
      description: Type of file
      type: string
      enum: [science, calibration, processed, ancillary]
    OutputFormat:
      description: Format of results
      type: string
      enum: [JSON, CSV, VOTABLE, HTML]
    PackageType: #eas, sdas
      description: type of packing for multiple files
      type: string
      enum: [tar, zip, gzip]
    CompressionType: #sdas
      description: type of compression
      type: string
      enum: [gzip, fpack]
    EventKey: #eas, mas
      type: string
      description: name of event including prefix
    Tag: #eas, fss, sdas
      type: object
      properties:
        name: 
          type: string
        value: 
          type: string
      required:
      - name
      - value
    Parameter:
      description: Event parameter
      type: string
      properties:
        name:
          type: string
          description: name of parameter
        index: 
          type: integer
          minimum: 0
    ParameterValue:
      type: object
      properties:
        name:
          type: string
        datatype:
           $ref: '#/components/schemas/EventType'
        values: 
          type: array
          items:
            $ref: '#/components/schemas/ItemValue'
    ItemValue:
      type: object
      properties:
        value: 
          { }
        timestamp:
          type: string
    EventData:
      description: returned engineering event data
      type: object
      properties:
        EventName: 
          type: string
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterValue'
    EngData: #eas, mas
      allOf: 
      - $ref: '#/components/schemas/DataResponse'
      - type: object
        properties:
          eventData:
            type: array
            items:
              $ref: '#/components/schemas/EventData'
    SimpleLogData: #eas
      type: string
      example: "[INFO] Attempting to find connection (LocationServiceExampleClientApp.scala 131)\n[DEBUG] Trying HTTP connection (LocationServiceExampleClientApp.scala 134)"
    LogItem:
      type: object
      properties:
        "@prefix": 
          type: string
        "@subsystem":
          $ref: '#/components/schemas/Subsystem'
        "@componentName":
          type: string
        "@host": 
          type: string
        "@name":
          type: string
        "@severity": 
          type: string
        "@version": 
          type: number
        actor: 
          type: string
        class: 
          type: string
        file: 
          type: string
        line: 
          type: integer
        message: 
          type: string
        timestamp:
          type: string
    LogData: #eas 
      allOf: 
      - $ref: '#/components/schemas/DataResponse'
      - type: object
        properties:
          messages:
            type: array
            items: 
              $ref: '#/components/schemas/LogItem'
            example: 
              - "@prefix": "ESW.my-component-name"
                "@subsystem": "ESW"
                "@componentName": "my-component-name"
                "@host": "tmthost.local"
                "@name": "LocationServiceExampleClient"
                "@severity": "INFO"
                "@version": "0.1"
                actor: "akka://csw-examples-locationServiceClient@10.131.23.195:53618/user/$a"
                class: "csw.location.LocationServiceExampleClient"
                file: "LocationServiceExampleClientApp.scala"
                line: 149
                message: "Sending query to service: ping"
                timestamp: "2017-11-30T10:58:03.102Z"
              - "@prefix": "ESW.my-second-component"
                "@subsystem": "ESW"
                "@componentName": "my-second-component"
                "@host": "tmthost2.local"
                "@name": "LocationServiceExampleServer"
                "@severity": "DEBUG"
                "@version": "0.2"
                actor: "akka://csw-examples-locationServiceClien2@10.131.23.196:53618/user/$a"
                class: "csw.location.LocationServiceExampleClient"
                file: "LocationServiceExampleServiceApp.scala"
                line: 243
                message: "Sending response: pong"
                timestamp: "2017-11-30T10:58:03.112Z"
              
    FileItem:
      type: object
      properties:
        uri: 
          type: string
        timestamp:
          type: string
        subsystem:
          $ref: '#/components/schemas/Subsystem'
        channelName:
          type: string
        tags:
          type: array
          items: 
            $ref: '#/components/schemas/Tag'
    FileData: #eas
      allOf: 
      - $ref: '#/components/schemas/DataResponse'
      - type: object
        properties:
          files: 
            type: array
            items:
              $ref: '#/components/schemas/FileItem'
    AnyData: #eas
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/EngData'
          - $ref: '#/components/schemas/LogData'
          - $ref: '#/components/schemas/FileData'
        discriminator: 
          propertyName: dataResponseType
    ScienceSearchResultItem: #sdas
      type: object
      properties: 
        uri:
          type: string
        name: 
          type: string
        exposureId:
          type: string
        date: 
          type: string
        time: 
          type: string
        ra: 
          type: string
        dec: 
          type: string
        instrument:
          type: string
        channel:
          type: string
        itime:
          type: number
        coadds:
          type: integer
        filter:
          type: string
        scale:
          type: string
        res:
          type: string
        aoMode:
          type: string
    
    VOTABLE: #sdas
      type: object
      properties:
        version:
          type: number
          example: 1.4
          xml:
            attribute: true
        xmlns:
          type: string
          example: http://www.ivoa.net/xml/VOTable/v1.3
          xml:
            attribute: true
        RESOURCE: 
          type: object
          properties:
            name: 
              type: string
              example: myFavouriteGalaxies
              xml:
                attribute: true
            COOSYS: 
              type: object
              properties:
                ID:
                  type: string
                  example: sys
                  xml: 
                    attribute: true
                equinox:
                  type: string
                  example: J2000
                  xml: 
                    attribute: true
                epoch:
                  type: string
                  example: J2000
                  xml: 
                    attribute: true
                system:
                  type: string
                  example: eq_FK5
                  xml: 
                    attribute: true
            TABLE: 
              type: object
              properties:
                name:
                  type: string
                  example: results
                  xml:
                    attribute: true
                DESCRIPTION: 
                  type: string
                  example: Velocities and Distance estimations
                PARAM:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Telescope
                      xml:
                        attribute: true
                    datatype:
                      type: string
                      example: float
                      xml:
                        attribute: true
                    ucd:
                      type: string
                      example: phys.size;instr.tel
                      xml:
                        attribute: true
                    unit:
                      type: string
                      example: m
                      xml:
                        attribute: true
                    value:
                      type: string
                      example: 3.6
                      xml:
                        attribute: true
                FIELD:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        xml:
                          attribute: true
                      DESCRIPTION:
                        type: string
                      ID:
                        type: string
                        xml:
                          attribute: true
                      ucd: 
                        type: string
                        xml:
                          attribute: true
                      datatype:
                        type: string
                        xml:
                          attribute: true
                      width:
                        type: integer
                        xml:
                          attribute: true
                      precision:
                        type: integer
                        xml:
                          attribute: true
                      unit:
                        type: string
                        xml:
                          attribute: true
                      ref: 
                        type: string
                        xml:
                          attribute: true
                  example:
                  - name: "RA" 
                    ID: "col1" 
                    ucd: "pos.eq.ra;meta.main" 
                    datatype: "float" 
                    width: "6" 
                    precision: "2" 
                    unit: "deg" 
                    ref: "sys"
                  - name: "Dec" 
                    ID: "col2" 
                    ucd: "pos.eq.dec;meta.main" 
                    datatype: "float" 
                    width: "6" 
                    precision: "2" 
                    unit: "deg" 
                    ref: "sys"
                  - name: "Name" 
                    ID: "col3" 
                    ucd: "meta.id;meta.main" 
                    datatype: "char" 
                    arraysize: "8*"
                  - name: "RVel" 
                    ID: "col4"
                    ucd: "spect.dopplerVeloc" 
                    datatype: "int" 
                    width: "5" 
                    unit: "km/s"
                  - name: "e_RVel" 
                    ID: "col5" 
                    ucd: "stat.error;spect.dopplerVeloc" 
                    datatype: "int" 
                    width: "3" 
                    unit: "km/s"
                  - name: "R" 
                    ID: "col6" 
                    ucd: "pos.distance;pos.heliocentric" 
                    datatype: "float" 
                    width: "4" 
                    precision: "1" 
                    unit: "Mpc"
                    DESCRIPTION: Distance of Galaxy, assuming H=75km/s/Mpc
                DATA:
                  type: object
                  properties:
                    tabledata:
                      type: array
                      items:
                        type: array
                        items:
                          type: string
                          xml:
                            name: TD
                        xml:
                          name: TR
                          wrapped: true
                      xml: 
                        name: TABLEDATA
                        wrapped: true
                      example:
                        - ["010.68","+41.27","N 224","-297","5","0.7"]
                        - ["287.43","-63.85","N 6744","839","6","10.4"]
                        - ["023.48","+30.66","N 598","-182","3","0.7"]

                      
                      